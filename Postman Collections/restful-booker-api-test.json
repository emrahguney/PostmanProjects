{
	"info": {
		"_postman_id": "5530694c-3bed-4035-b6f8-feaa876cab3e",
		"name": "Restful-Booker-API",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "01_Create_Token",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "514faa6d-d5a4-4c31-91a8-517f486622fd",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "c229cbc7-f81e-4611-a77c-931d9aa9e74b",
						"exec": [
							"pm.environment.set(\"token\",pm.response.json().token)\r",
							"\r",
							"pm.test(\"Status Code 200\",function(){\r",
							"pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "11e0c580-a98d-490e-97c5-cdcc6210bcc9",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": {
						"password": "password123",
						"username": "admin"
					}
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\" : \"admin\",\r\n    \"password\" : \"password123\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{baseURL}}/auth"
			},
			"response": []
		},
		{
			"name": "02_GetBookingIDs",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "0fe276f2-f588-4fac-b567-738037c382ca",
						"exec": [
							"pm.test(\"Status Code 200\",function(){\r",
							"pm.response.to.have.status(200);\r",
							"})\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "55d35e00-5010-4dde-b52e-f83123146072",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": {
						"password": "password123",
						"username": "admin"
					}
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{baseURL}}/booking"
			},
			"response": []
		},
		{
			"name": "03_CreateBooking",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3f0fe74b-8458-4ac5-bb82-29d97a0be569",
						"exec": [
							"\r",
							"let response = pm.response.json();\r",
							"pm.environment.set(\"Fname\",pm.response.json().booking.firstname);\r",
							"pm.environment.set(\"Lname\",pm.response.json().booking.lastname);\r",
							"pm.environment.set(\"Tprice\", pm.response.json().booking.totalprice);\r",
							"pm.environment.set(\"BookingID\",pm.response.json().bookingid);\r",
							"pm.environment.set(\"Checkin\",pm.response.json().booking.bookingdates.checkin);\r",
							"pm.environment.set(\"Checkout\",pm.response.json().booking.bookingdates.checkout);\r",
							"pm.environment.set(\"AdditionalNeeds\",response.booking.additionalneeds);\r",
							"\r",
							"pm.test(\"Status Code 200\",function(){\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Additional needs Assertion\",function(){\r",
							"\r",
							"    pm.expect(response.booking.additionalneeds).is.eql(pm.environment.get(\"AdditionalNeeds\"))\r",
							"})\r",
							"\r",
							"pm.test(\"Booking checkin  Assertion\",function(){\r",
							"    pm.expect(response.booking.bookingdates.checkin).is.eql(pm.environment.get(\"Checkin\"))\r",
							"    \r",
							"\r",
							"});\r",
							"\r",
							"pm.test(\"Booking  checkout Assertion\",function(){\r",
							"    \r",
							"    pm.expect(response.booking.bookingdates.checkout).is.eql(pm.environment.get(\"Checkout\"))\r",
							"\r",
							"});\r",
							"\r",
							"pm.test(\"Booking Name Assertion\",function(){\r",
							"pm.expect(response.booking.firstname).is.eql(pm.environment.get(\"Fname\"));\r",
							"});\r",
							"\r",
							"pm.test(\"Booking Lastname Assertion\",function(){\r",
							"pm.expect(response.booking.lastname).is.eql(pm.environment.get(\"Lname\"));\r",
							"});\r",
							"\r",
							"pm.test(\"Booking Totalprice Assertion\",function(){\r",
							"pm.expect(response.booking.totalprice).is.eql(pm.environment.get(\"Tprice\"));\r",
							"});\r",
							"\r",
							"pm.test(\"Booking ID Assertion\",function(){\r",
							"    pm.expect(response.bookingid).is.eql(pm.environment.get(\"BookingID\"));\r",
							"});\r",
							"\r",
							"pm.test(\"Booking depositpaid Assertion\",function(){\r",
							"    pm.expect(response.booking.depositpaid).is.eql(true);\r",
							"});\r",
							"\r",
							"pm.test(\"Successful POST request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response Content-Type is application/json\", function () {\r",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"pm.test(\"Firstname and lastname should be non-empty strings\", function () {\r",
							"    \r",
							"    \r",
							"    pm.expect(response).to.be.an('object');\r",
							"    pm.expect(response.booking.firstname).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Firstname should not be empty\");\r",
							"    pm.expect(response.booking.lastname).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Lastname should not be empty\");\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Totalprice is a non-negative integer\", function () {\r",
							"    \r",
							"    \r",
							"    pm.expect(response.booking.totalprice).to.be.a('number').and.to.be.at.least(0);\r",
							"});\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "46adf57e-8ecd-4695-a51a-151b38be0106",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": {
						"password": "password123",
						"username": "admin"
					}
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstname\" : \"{{$randomFirstName}}\",\r\n    \"lastname\" : \"{{$randomLastName}}\",\r\n    \"totalprice\" : {{$randomInt}},\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : {\r\n        \"checkin\" : \"{{$randomDatePast}}\",\r\n        \"checkout\" : \"{{$randomDateFuture}}\"\r\n    },\r\n    \"additionalneeds\" : \"No Smoking\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{baseURL}}/booking"
			},
			"response": []
		},
		{
			"name": "04_GetBooking",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7e5329a4-88c8-46ff-bb98-2e08ea8bed87",
						"exec": [
							"pm.test(\"Status Code 200\",function(){\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"let response = pm.response.json();\r",
							"\r",
							"pm.test(\"First Name Assertion\",function(){\r",
							"    pm.expect(response.firstname).to.equal(pm.environment.get(\"Fname\"));\r",
							"});\r",
							"\r",
							"pm.test(\"Last Name Assertion\",function(){\r",
							"\r",
							"pm.expect(response.lastname).to.eql(pm.environment.get(\"Lname\"));\r",
							"\r",
							"});\r",
							"\r",
							"pm.test(\"Totalprice Assertion\",function(){\r",
							"    pm.expect(response.totalprice).to.eql(pm.environment.get(\"Tprice\"));\r",
							"});\r",
							"\r",
							"pm.test(\"Deposit paid is true\",function(){\r",
							"\r",
							"    pm.expect(response.depositpaid).to.eql(true);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "c5beb55a-b8af-4f23-bd28-d760553674ee",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": {
						"password": "password123",
						"username": "admin"
					}
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/booking/:id",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"booking",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "{{BookingID}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "05_UpdateBooking",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1a925585-8eb7-48ae-a3f8-6b42588e10b4",
						"exec": [
							"let response = pm.response.json();\r",
							"\r",
							"pm.test(\"Status Code 200\",function(){\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.environment.set(\"FName\",response.firstname);\r",
							"pm.environment.set(\"LName\",response.lastname);\r",
							"pm.environment.set(\"Tprice\",response.totalprice);\r",
							"pm.environment.set(\"DPaid\",response.depositpaid);\r",
							"pm.environment.set(\"Checkin\",response.bookingdates.checkin);\r",
							"pm.environment.set(\"Checkout\",response.bookingdates.checkout);\r",
							"pm.environment.set(\"AdditionalNeeds\",response.additionalneeds);\r",
							"\r",
							"pm.test(\"Firstname Assertion\",function(){\r",
							"    pm.expect(response.firstname).to.eql(pm.environment.get(\"FName\"));\r",
							"});\r",
							"\r",
							"pm.test(\"Lastname Assertion\",function(){\r",
							"\r",
							"pm.expect(response.lastname).to.eql(pm.environment.get(\"LName\"));\r",
							"\r",
							"});\r",
							"\r",
							"pm.test(\"Totalprice Assertion\",function(){\r",
							"\r",
							"    pm.expect(response.totalprice).to.eql(pm.environment.get(\"Tprice\"))\r",
							"});\r",
							"\r",
							"pm.test(\"depositpaid Assertion\",function(){\r",
							"\r",
							"pm.expect(response.depositpaid).to.eql(pm.environment.get(\"DPaid\"))\r",
							"});\r",
							"\r",
							"pm.test(\"Checkin and Checkout Assertion\",function(){\r",
							"\r",
							"    pm.expect(response.bookingdates.checkin).to.eql(pm.environment.get(\"Checkin\"));\r",
							"    pm.expect(response.bookingdates.checkout).to.eql(pm.environment.get(\"Checkout\"));\r",
							"})\r",
							"\r",
							"pm.test(\"Additionalneeds Assertion\",function(){\r",
							"pm.expect(response.additionalneeds).to.eql(pm.environment.get(\"AdditionalNeeds\"))\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "520e4e20-37b6-4536-95df-57c587521f3c",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": {
						"password": "password123",
						"username": "admin"
					}
				},
				"method": "PUT",
				"header": [
					{
						"key": "Cookie",
						"value": "token={{token}}",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstname\" : \"{{$randomFirstName}}\",\r\n    \"lastname\" : \"{{$randomLastName}}\",\r\n    \"totalprice\" : {{$randomInt}},\r\n    \"depositpaid\" : {{$randomBoolean}},\r\n    \"bookingdates\" : {\r\n        \"checkin\" : \"{{$randomDatePast}}\",\r\n        \"checkout\" : \"{{$randomDateFuture}}\"\r\n    },\r\n    \"additionalneeds\" : \"VIP Room\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/booking/:id",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"booking",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "{{BookingID}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "06_PartialUpdateBooking",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "19c936fb-505a-455b-b476-c6add4754b30",
						"exec": [
							"pm.test(\"Status Code 200\",function(){\r",
							"    pm.response.to.have.status(200)\r",
							"});\r",
							"let response = pm.response.json();\r",
							"pm.environment.set(\"FName\",response.firstname);\r",
							"pm.environment.set(\"LName\",response.lastname);\r",
							"\r",
							"pm.test(\"Firstname Assertion\",function(){\r",
							"\r",
							"pm.expect(response.firstname).to.eql(pm.environment.get(\"FName\"))\r",
							"});\r",
							"\r",
							"pm.test(\"Lastname Assertion\",function(){\r",
							"\r",
							"pm.expect(response.lastname).is.eql(pm.environment.get(\"LName\"))\r",
							"});\r",
							"\r",
							"pm.test(\"Totalprice Assertion\",function(){\r",
							"\r",
							"    pm.expect(response.totalprice).to.eql(pm.environment.get(\"Tprice\"))\r",
							"});\r",
							"\r",
							"pm.test(\"depositpaid Assertion\",function(){\r",
							"\r",
							"pm.expect(response.depositpaid).to.eql(pm.environment.get(\"DPaid\"))\r",
							"});\r",
							"\r",
							"pm.test(\"Checkin and Checkout Assertion\",function(){\r",
							"\r",
							"    pm.expect(response.bookingdates.checkin).to.eql(pm.environment.get(\"Checkin\"));\r",
							"    pm.expect(response.bookingdates.checkout).to.eql(pm.environment.get(\"Checkout\"));\r",
							"})\r",
							"\r",
							"pm.test(\"Additionalneeds Assertion\",function(){\r",
							"pm.expect(response.additionalneeds).to.eql(pm.environment.get(\"AdditionalNeeds\"))\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "7497dc9d-45f7-4b63-89fb-46050e7cac14",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": {
						"password": "password123",
						"username": "admin"
					}
				},
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Cookie",
						"value": "token={{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstname\" : \"{{$randomFirstName}}\",\r\n    \"lastname\" : \"{{$randomLastName}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/booking/:id",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"booking",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "{{BookingID}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "07_DeleteBooking",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "fa7d1416-d4dd-4e48-9350-ffcc0a7f0ab2",
						"exec": [
							"pm.test(\"Status Code 201\",function(){\r",
							"\r",
							"    pm.response.to.have.status(201)\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "2e1914df-0baf-4742-9f3b-b6e1e60f6402",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Cookie",
						"value": "token={{token}}",
						"type": "text"
					}
				],
				"url": "{{baseURL}}/booking/{{BookingID}}"
			},
			"response": []
		}
	],
	"auth": {
		"type": "basic",
		"basic": {
			"password": "password123",
			"username": "admin"
		}
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "96ce9cff-39ea-4e3f-b7a5-79689c3e21f0",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "7826ec1a-0c0b-4b99-b199-214a2358c95d",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}